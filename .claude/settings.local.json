{
  "permissions": {
    "allow": [
      "Bash(mkdir:*)",
      "Bash(find:*)",
      "Read(//home/matt/code/musashi/.claude/guidance/**)",
      "Bash(while read file)",
      "Bash(done)",
      "Bash(sort:*)",
      "mcp__gemini-bridge__consult_gemini_with_files",
      "mcp__gemini-bridge__consult_gemini",
      "Bash(tree:*)",
      "Bash(grep:*)",
      "Read(//home/matt/code/musashi/spec/services/seismic/**)",
      "Read(//home/matt/code/musashi/.claude/**)",
      "Read(//home/matt/.local/bin/**)",
      "WebFetch(domain:www.reddit.com)",
      "Read(//home/matt/code/crouton-claude/**)",
      "Read(//home/matt/code/village/.claude/**)",
      "WebFetch(domain:docs.claude.com)",
      "WebFetch(domain:gist.github.com)",
      "WebFetch(domain:github.com)",
      "Bash(claude-code --help)",
      "Bash(if [ -f \"$HOME/.claude/python-env/bin/python\" ])",
      "Bash(then echo \"✅ Claude Python environment found\")",
      "Bash(else echo \"❌ Need to run setup: ~/.claude/commands/setup-claude-python-env.sh\")",
      "Bash(fi)",
      "Bash(source:*)",
      "Bash(python:*)",
      "Bash(python3:*)",
      "Bash(echo:*)",
      "Bash(awk:*)",
      "Bash(/home/matt/.claude/commands/compress-guidance-wrapper.sh:*)",
      "Read(//usr/bin/**)",
      "Bash(chmod:*)",
      "Bash(~/.claude/python-env/bin/python:*)",
      "Bash(cat:*)",
      "Bash(__NEW_LINE__ echo \"1. project-plan.md alternatives:\")",
      "Bash(__NEW_LINE__ find ~/.claude/guidance -name \"*project*\" -type f)",
      "Bash(__NEW_LINE__ echo -e \"\\n2. architecture-decisions.md alternatives:\")",
      "Bash(__NEW_LINE__ find ~/.claude/guidance -name \"*architecture*\" -o -name \"*decision*\" -type f)",
      "Bash(__NEW_LINE__ echo -e \"\\n3. tdd-principles.md alternatives:\")",
      "Bash(__NEW_LINE__ find ~/.claude/guidance -name \"*tdd*\" -o -name \"*test*\" -type f)",
      "Bash(__NEW_LINE__ echo -e \"\\n4. testing-strategy.md alternatives:\")",
      "Bash(__NEW_LINE__ find ~/.claude/guidance -name \"*test*\" -o -name \"*strategy*\" -type f)"
    ],
    "deny": [],
    "ask": []
  }
}